/* Curl Top Left */
@mixin hardwareAccel() {
	//Improve performance on mobile/tablet devices
	@include prefixed(transform, translateZ(0));
}

@mixin improveAntiAlias() {
	//Improve aliasing on mobile/tablet devices
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
}

@mixin hacks() {
  @include hardwareAccel();
  @include improveAntiAlias();
}

@mixin curl-top-left {
	position: relative;
	@include hacks();
	&:before {
		pointer-events: none;
		position: absolute;
		content: '';
		height: 0;
		width: 0;
		top: 0;
		left: 0;
		background: $revealAreaColour; /* IE9 */
		background: linear-gradient(
			135deg,
			$revealAreaColour 45%,
			$curlLineColour 50%,
			$curlTransitionColour 56%,
			$curlLastColour 80%
		);
		filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr='#ffffff', endColorstr='#000000');/*For IE7-8-9*/

		z-index: 1000;
		box-shadow: 1px 1px 1px rgba(0, 0, 0, .4);
		@include prefixed(transition-duration, $defaultDuration);
		@include prefixed(transition-property, "width, height");
	}

	&:hover:before,
	&:focus:before,
	&:active:before {
		width: $curlWidth;
		height: $curlHeight;
	}
}


// prefix declarations
@mixin prefixed($property, $value) {
  @if $webkit == true {
    -webkit-#{$property}: #{$value};
  }

  @if $moz == true {
    -moz-#{$property}: #{$value};
  }

  @if $ms == true {
    -ms-#{$property}: #{$value};
  }

  @if $o == true {
    -o-#{$property}: #{$value};
  }

  #{$property}: #{$value};
}

// prefix keyframes
@mixin keyframes($name) {
  @if $webkit == true {
    @-webkit-keyframes $name {
      @content;
    }
  }

  @if $moz == true {
    @-moz-keyframes $name {
      @content;
    }
  }

  @if $ms == true {
    @-ms-keyframes $name {
      @content;
    }
  }

  @if $o == true {
    @-o-keyframes $name {
      @content;
    }
  }

  @keyframes $name {
    @content;
  }
}
